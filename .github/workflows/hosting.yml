on:
  push:
    branches:
      - master
      - dev
    paths-ignore:
      - functions/**
      - "*"
      - "!firebase.json"
  pull_request:
    branches:
      - master
      - dev

env:
  WORKING_DIRECTORY: ./gatsby

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - run: npx prettier --check "**/*.{js,jsx,json,md}"
        working-directory: ${{ env.WORKING_DIRECTORY }}

  build:
    if: github.event_name	== 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - run: npm run build
        working-directory: ${{ env.WORKING_DIRECTORY }}

  deploy:
    if: github.event_name	== 'push'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - run: npm ci
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Build Prod
        run: npm run build
        if: github.ref == 'refs/heads/master'
        env:
          GATSBY_API_AMPLITUDE: ${{ secrets.GATSBY_API_AMPLITUDE }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Build Stg
        run: npm run build
        if: github.ref == 'refs/heads/dev'
        env:
          GATSBY_API_AMPLITUDE: ${{ secrets.GATSBY_API_AMPLITUDE_STG }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - run: mv public ../public
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: Deploy to Prod Firebase Hosting
        if: github.ref == 'refs/heads/master'
        uses: w9jds/firebase-action@v1.1.0
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
      - name: Deploy to Stg Firebase Hosting
        if: github.ref == 'refs/heads/dev'
        uses: w9jds/firebase-action@v1.1.0
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID_STG }}
